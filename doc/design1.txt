------------------------------------------------------------------------------------------------------------------------
READ: I put all the player/bomb/treasure functions as methods inside the class, so there's no make_object() functions
------------------------------------------------------------------------------------------------------------------------

blueprint for each object:
needs a variable for
image
width
height
radius
draw position
center position
*also needs to know screen height and width*

Move Player(self, X/Y, direction)
    player.draw_position[X or Y] += self.move[X or Y] * direction (direction can be either 1 or -1)
    updates the center position the same way as draw position


Move Bomb(self, sound)
    ## if statements will reverse the movement of the bomb if it's touching a wall
    if draw_position[X] + width >= screen_width or draw_position[X] <= 0:
        move[X] *= -1
    if <same thing but for Y direction>:
        move[Y] *= -1

    self.draw_position += self.move
    self.center_position += self.move

Check if treasures are captured:
    temp_list = []
    for i in treasure_list:
        distance = distance formula where x1/y1 are i.center_position and x2/y2 are player.center_position
        if the distance[X] is greater than the width of the treasure + the player's radius or <the same but Y & height>
            temp_list.append(i) #did not get treasure
        else:
            play treasure grab sound

------------------------------------------------------------------------------------------------------------------------
specifics for bomb
    - has a variable for limit which is a list that has the screen width and height in it.
      has this so the move function doesn't need any parameters
    - will have a move function that always moves the bomb, bomb needs to bounce off walls if it is touching them

specifics for player
    - direction for movement is decided outside of class definition
specifics for treasure
    - has random center and draw positions
setup
set up backrgound and objects
adds treasure objects to a list with a for loop

game loop:
when game is not over:
move player with arrow keys
bomb moves
check if player is touching bomb, and end game if so
check is player touching any treasures, and remove them from the list

fills screen with black
fills screen with background
adds treasure list to screen
adds player to screen
adds bomb to screen

when game is over:
say message that's something like game over
won
set color to green and congratulate player
lost
set color to red and say try better next time or something similar


Thing to stop player from moving offscreen:
    when you check what arrow is being pressed, check if the player will move out of bounds
        if they won't: they can move in that direction
        if they will: the arrow won't move them at all